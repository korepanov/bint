string$ret;
intCOMMAND_COUNTER;
stringcommand;
COMMAND_COUNTER=0;
string$reverse_return_var;
stack$reverse_res;
goto(#reverse_end);
#reverse:print("");
stacks;
print("");
pop(s);
print("");
stringbuf;
stackres;
s.pop(buf);
#_reverse_s:print("");
[goto(#_reverse_e),("end"==buf),print("")];
res.push(buf);
s.pop(buf);
goto(#_reverse_s);
#_reverse_e:print("");
push(res);
UNDEFINE(res);
UNDEFINE(buf);
UNDEFINE(s);
goto($reverse_return_var);
#reverse_end:print("");
string$indexes_return_var;
stack$indexes_res;
goto(#indexes_end);
#indexes:print("");
stringsub_s;
strings;
print("");
pop(sub_s);
pop(s);
print("");
stackres;
inti;
intpointer;
ints_len;
ints_len_old;
intsub_len;
int$l0;
$l0=len(s);
s_len=$l0;
UNDEFINE($l0);
int$l0;
$l0=len(sub_s);
sub_len=$l0;
UNDEFINE($l0);
s_len_old=s_len;
int$ind0;
$ind0=index(s,sub_s);
i=$ind0;
UNDEFINE($ind0);
pointer=i;
#_indexes_s:print("");
[goto(#_indexes_e),(-1==i),print("")];
i=(i+(s_len_old-s_len));
res.push(i);
pointer=(pointer+sub_len);
int$sl_internal0;
int$sl_left0;
int$sl_right0;
$sl_left0=pointer;
$sl_right0=s_len;
string$sl0;
$sl0=s[$sl_left0:$sl_right0];
s=$sl0;
UNDEFINE($sl_internal0);
UNDEFINE($sl0);
UNDEFINE($sl_left0);
UNDEFINE($sl_right0);
int$l0;
$l0=len(s);
s_len=$l0;
UNDEFINE($l0);
int$ind0;
$ind0=index(s,sub_s);
i=$ind0;
UNDEFINE($ind0);
pointer=i;
goto(#_indexes_s);
#_indexes_e:print("");
stack$reverse_res0;
push(res);
$reverse_return_var="#reverse_res0";
goto(#reverse);
#reverse_res0:pop($reverse_res);
$reverse_res0=$reverse_res;
res=$reverse_res0;
UNDEFINE($reverse_res0);
push(res);
UNDEFINE(sub_len);
UNDEFINE(s_len_old);
UNDEFINE(s_len);
UNDEFINE(pointer);
UNDEFINE(i);
UNDEFINE(res);
UNDEFINE(sub_s);
UNDEFINE(s);
goto($indexes_return_var);
#indexes_end:print("");
string$SET_COMMAND_COUNTER_return_var;
goto(#SET_COMMAND_COUNTER_end);
#SET_COMMAND_COUNTER:print("");
intcounter;
print("");
pop(counter);
print("");
inti;
i=0;
stringcommand;
RESET_SOURCE();
COMMAND_COUNTER=counter;
#_set_start:print("");
[print(""),(i<counter),goto(#_set_end)];
next_command(command);
i=(i+1);
goto(#_set_start);
#_set_end:print("");
print("");
UNDEFINE(command);
UNDEFINE(i);
UNDEFINE(counter);
goto($SET_COMMAND_COUNTER_return_var);
#SET_COMMAND_COUNTER_end:print("");
string$get_command_return_var;
string$get_command_res;
goto(#get_command_end);
#get_command:print("");
intcounter;
print("");
pop(counter);
print("");
inti;
stringbuf;
stringcommand;
i=0;
RESET_SOURCE();
#_get_command_s:print("");
[print(""),(i<counter),goto(#_get_command_e)];
next_command(command);
i=(i+1);
goto(#_get_command_s);
#_get_command_e:print("");
push(COMMAND_COUNTER);
$SET_COMMAND_COUNTER_return_var="#SET_COMMAND_COUNTER_res0";
goto(#SET_COMMAND_COUNTER);
#SET_COMMAND_COUNTER_res0:print("");
print("");
push(command);
UNDEFINE(command);
UNDEFINE(buf);
UNDEFINE(i);
UNDEFINE(counter);
goto($get_command_return_var);
#get_command_end:print("");
string$switch_command_return_var;
goto(#switch_command_end);
#switch_command:print("");
print("");
COMMAND_COUNTER=(COMMAND_COUNTER+1);
next_command(command);
goto($switch_command_return_var);
#switch_command_end:print("");
string$stack_len_return_var;
int$stack_len_res;
goto(#stack_len_end);
#stack_len:print("");
stacks;
print("");
pop(s);
print("");
intres;
stringbuf;
res=0;
s.pop(buf);
#_stack_len_s:print("");
[goto(#_stack_len_e),("end"==buf),print("")];
res=(res+1);
s.pop(buf);
goto(#_stack_len_s);
#_stack_len_e:print("");
push(res);
UNDEFINE(buf);
UNDEFINE(res);
UNDEFINE(s);
goto($stack_len_return_var);
#stack_len_end:print("");
string$ops_return_var;
stack$ops_res;
goto(#ops_end);
#ops:print("");
stringop;
stringcommand;
print("");
pop(op);
pop(command);
print("");
stackquotes;
stackthese_quotes;
stackop_nums;
stringbuf;
stackres;
intnum1;
intnum2;
intop_num;
boolwas_quote;
boolto_add;
was_quote=False;
to_add=True;
stack$indexes_res0;
push(command);
push(op);
$indexes_return_var="#indexes_res0";
goto(#indexes);
#indexes_res0:pop($indexes_res);
$indexes_res0=$indexes_res;
op_nums=$indexes_res0;
UNDEFINE($indexes_res0);
op_nums.pop(buf);
#_op_nums_s:print("");
[goto(#_op_nums_e),("end"==buf),print("")];
int$I0;
$I0=int(buf);
op_num=$I0;
UNDEFINE($I0);
stack$stack_var0;
$stack_var0=reg_find("\"(\\.|[^\"])*\"",command);
quotes=$stack_var0;
UNDEFINE($stack_var0);
#_quotes_s:print("");
quotes.pop(these_quotes);
these_quotes.pop(buf);
[goto(#_quotes_e),("end"==buf),print("")];
#_these_quotes_s:print("");
[goto(#_these_quotes_e),("end"==buf),print("")];
int$I0;
$I0=int(buf);
num1=$I0;
UNDEFINE($I0);
these_quotes.pop(buf);
int$I0;
$I0=int(buf);
num2=$I0;
UNDEFINE($I0);
these_quotes.pop(buf);
was_quote=True;
goto(#_these_quotes_s);
#_these_quotes_e:print("");
[print(""),((op_num>num1)AND(op_num<num2)),goto(#_is_op_end)];
to_add=False;
goto(#_push_op_end);
#_is_op_end:print("");
goto(#_quotes_s);
#_quotes_e:print("");
[goto(#_push_op_end),((was_quote)AND(NOT(to_add))),print("")];
res.push(op_num);
was_quote=False;
to_add=True;
#_push_op_end:print("");
print("");
op_nums.pop(buf);
was_quote=False;
to_add=True;
goto(#_op_nums_s);
#_op_nums_e:print("");
stack$reverse_res1;
push(res);
$reverse_return_var="#reverse_res1";
goto(#reverse);
#reverse_res1:pop($reverse_res);
$reverse_res1=$reverse_res;
res=$reverse_res1;
UNDEFINE($reverse_res1);
push(res);
UNDEFINE(to_add);
UNDEFINE(was_quote);
UNDEFINE(op_num);
UNDEFINE(num2);
UNDEFINE(num1);
UNDEFINE(res);
UNDEFINE(buf);
UNDEFINE(op_nums);
UNDEFINE(these_quotes);
UNDEFINE(quotes);
UNDEFINE(op);
UNDEFINE(command);
goto($ops_return_var);
#ops_end:print("");
string$block_end_return_var;
int$block_end_res;
goto(#block_end_end);
#block_end:print("");
print("");
stringop1;
stringop2;
stringcode;
stringcommand_buf;
into_sum;
intc_sum;
intcommand_len;
stackobraces;
stackcbraces;
stringbuf;
stringspos;
intcounter;
intbuf_counter;
intpos;
counter=COMMAND_COUNTER;
int$l0;
$l0=len(command);
command_len=$l0;
UNDEFINE($l0);
int$sl_internal0;
int$sl_left0;
int$sl_right0;
$sl_left0=1;
$sl_right0=command_len;
string$sl0;
$sl0=command[$sl_left0:$sl_right0];
command=$sl0;
UNDEFINE($sl_internal0);
UNDEFINE($sl0);
UNDEFINE($sl_left0);
UNDEFINE($sl_right0);
code=command;
next_command(command);
counter=(counter+1);
int$sl_internal0;
int$sl_left0;
int$sl_right0;
$sl_internal0=0;
string$sl0;
$sl0=command[$sl_internal0];
code=(code+$sl0);
UNDEFINE($sl_internal0);
UNDEFINE($sl0);
UNDEFINE($sl_left0);
UNDEFINE($sl_right0);
o_sum=1;
c_sum=0;
#_block_s:print("");
[goto(#_block_e),(o_sum==c_sum),print("")];
stack$ops_res0;
push(code);
push("{");
$ops_return_var="#ops_res0";
goto(#ops);
#ops_res0:pop($ops_res);
$ops_res0=$ops_res;
obraces=$ops_res0;
UNDEFINE($ops_res0);
stack$ops_res1;
push(code);
push("}");
$ops_return_var="#ops_res1";
goto(#ops);
#ops_res1:pop($ops_res);
$ops_res1=$ops_res;
cbraces=$ops_res1;
UNDEFINE($ops_res1);
int$stack_len_res0;
push(obraces);
$stack_len_return_var="#stack_len_res0";
goto(#stack_len);
#stack_len_res0:pop($stack_len_res);
$stack_len_res0=$stack_len_res;
o_sum=$stack_len_res0;
UNDEFINE($stack_len_res0);
int$stack_len_res1;
push(cbraces);
$stack_len_return_var="#stack_len_res1";
goto(#stack_len);
#stack_len_res1:pop($stack_len_res);
$stack_len_res1=$stack_len_res;
c_sum=$stack_len_res1;
UNDEFINE($stack_len_res1);
int$l0;
$l0=len(command);
command_len=$l0;
UNDEFINE($l0);
int$sl_internal0;
int$sl_left0;
int$sl_right0;
$sl_left0=1;
$sl_right0=command_len;
string$sl0;
$sl0=command[$sl_left0:$sl_right0];
command_buf=$sl0;
UNDEFINE($sl_internal0);
UNDEFINE($sl0);
UNDEFINE($sl_left0);
UNDEFINE($sl_right0);
code=(code+command_buf);
next_command(command);
counter=(counter+1);
int$sl_internal0;
int$sl_left0;
int$sl_right0;
$sl_internal0=0;
string$sl0;
$sl0=command[$sl_internal0];
command_buf=$sl0;
UNDEFINE($sl_internal0);
UNDEFINE($sl0);
UNDEFINE($sl_left0);
UNDEFINE($sl_right0);
code=(code+command_buf);
goto(#_block_s);
#_block_e:print("");
buf_counter=(COMMAND_COUNTER-1);
push(buf_counter);
$SET_COMMAND_COUNTER_return_var="#SET_COMMAND_COUNTER_res1";
goto(#SET_COMMAND_COUNTER);
#SET_COMMAND_COUNTER_res1:print("");
print("");
next_command(command);
COMMAND_COUNTER=(COMMAND_COUNTER+1);
push((counter-1));
UNDEFINE(pos);
UNDEFINE(buf_counter);
UNDEFINE(counter);
UNDEFINE(spos);
UNDEFINE(buf);
UNDEFINE(cbraces);
UNDEFINE(obraces);
UNDEFINE(command_len);
UNDEFINE(c_sum);
UNDEFINE(o_sum);
UNDEFINE(command_buf);
UNDEFINE(code);
UNDEFINE(op2);
UNDEFINE(op1);
goto($block_end_return_var);
#block_end_end:print("");
string$println_return_var;
goto(#println_end);
#println:print("");
strings;
print("");
pop(s);
print("");
string $print_arg0;
$print_arg0=s;
print($print_arg0);
UNDEFINE($print_arg0);
string $print_arg0;
$print_arg0="\n";
print($print_arg0);
UNDEFINE($print_arg0);
UNDEFINE(s);
goto($println_return_var);
#println_end:print("");
string$in_stack_return_var;
bool$in_stack_res;
goto(#in_stack_end);
#in_stack:print("");
stringel;
stacks;
print("");
pop(el);
pop(s);
print("");
stringbuf;
boolres;
res=False;
s.pop(buf);
#_in_stack_s:print("");
[goto(#_in_stack_e),("end"==buf),print("")];
[print(""),(el==buf),goto(#_no)];
res=True;
goto(#_in_stack_e);
#_no:print("");
s.pop(buf);
goto(#_in_stack_s);
#_in_stack_e:print("");
push(res);
UNDEFINE(res);
UNDEFINE(buf);
UNDEFINE(el);
UNDEFINE(s);
goto($in_stack_return_var);
#in_stack_end:print("");
string$func_end_return_var;
int$func_end_res;
goto(#func_end_end);
#func_end:print("");
intfunc_begin;
stringcommand;
print("");
pop(func_begin);
pop(command);
print("");
stackobraces;
stackcbraces;
stringobrace;
stringcbrace;
stringsymbol;
into_sum;
intc_sum;
intpos;
stringspos;
intcommand_len;
int$l0;
$l0=len(command);
command_len=$l0;
UNDEFINE($l0);
obrace="(";
cbrace=")";
o_sum=1;
c_sum=0;
pos=(func_begin+1);
stack$ops_res2;
push(command);
push(obrace);
$ops_return_var="#ops_res2";
goto(#ops);
#ops_res2:pop($ops_res);
$ops_res2=$ops_res;
obraces=$ops_res2;
UNDEFINE($ops_res2);
stack$ops_res3;
push(command);
push(cbrace);
$ops_return_var="#ops_res3";
goto(#ops);
#ops_res3:pop($ops_res);
$ops_res3=$ops_res;
cbraces=$ops_res3;
UNDEFINE($ops_res3);
#_braces_s:print("");
[print(""),(pos<command_len),goto(#_braces_e)];
string$s0;
$s0=str(pos);
spos=$s0;
UNDEFINE($s0);
bool$in_stack_res0;
push(obraces);
push(spos);
$in_stack_return_var="#in_stack_res0";
goto(#in_stack);
#in_stack_res0:pop($in_stack_res);
$in_stack_res0=$in_stack_res;
[print(""),$in_stack_res0,goto(#_o_plus_end)];
UNDEFINE($in_stack_res0);
o_sum=(o_sum+1);
#_o_plus_end:print("");
bool$in_stack_res1;
push(cbraces);
push(spos);
$in_stack_return_var="#in_stack_res1";
goto(#in_stack);
#in_stack_res1:pop($in_stack_res);
$in_stack_res1=$in_stack_res;
[print(""),$in_stack_res1,goto(#_c_plus_end)];
UNDEFINE($in_stack_res1);
c_sum=(c_sum+1);
#_c_plus_end:print("");
[goto(#_braces_e),(o_sum==c_sum),print("")];
pos=(pos+1);
goto(#_braces_s);
#_braces_e:print("");
push(pos);
UNDEFINE(command_len);
UNDEFINE(spos);
UNDEFINE(pos);
UNDEFINE(c_sum);
UNDEFINE(o_sum);
UNDEFINE(symbol);
UNDEFINE(cbrace);
UNDEFINE(obrace);
UNDEFINE(cbraces);
UNDEFINE(obraces);
UNDEFINE(func_begin);
UNDEFINE(command);
goto($func_end_return_var);
#func_end_end:print("");
stringroot_source;
intnum;
boolfirst_file;
stringcondition;
string$init_return_var;
goto(#init_end);
#init:print("");
print("");
num=0;
first_file=True;
root_source="benv/internal/while_program.b";
SET_SOURCE(root_source);
SET_DEST("benv/internal/for_program.b");
goto($init_return_var);
#init_end:print("");
string$finish_return_var;
goto(#finish_end);
#finish:print("");
print("");
UNSET_SOURCE();
UNSET_DEST();
goto($finish_return_var);
#finish_end:print("");
string$is_for_return_var;
bool$is_for_res;
goto(#is_for_end);
#is_for:print("");
stringcommand;
print("");
pop(command);
print("");
stacks;
stringbuf;
intpos;
buf="for(";
stack$ops_res4;
push(command);
push(buf);
$ops_return_var="#ops_res4";
goto(#ops);
#ops_res4:pop($ops_res);
$ops_res4=$ops_res;
s=$ops_res4;
UNDEFINE($ops_res4);
s.pop(buf);
[print(""),(NOT("end"==buf)),goto(#_cond0_end)];
int$I0;
$I0=int(buf);
pos=$I0;
UNDEFINE($I0);
[print(""),(NOT(0==pos)),goto(#_cond1_end)];
push("for: ERROR");
$println_return_var="#println_res0";
goto(#println);
#println_res0:print("");
print("");
exit(1);
#_cond1_end:print("");
print("");
#_cond0_end:print("");
print("");
push((NOT("end"==buf)));
UNDEFINE(pos);
UNDEFINE(buf);
UNDEFINE(s);
UNDEFINE(command);
goto($is_for_return_var);
#is_for_end:print("");
string$is_var_def_return_var;
bool$is_var_def_res;
goto(#is_var_def_end);
#is_var_def:print("");
stringcommand;
print("");
pop(command);
print("");
stacks;
stringbuf;
stack$stack_var0;
$stack_var0=reg_find("^(?:(int|float|bool|stack|string)[^\(]*)",command);
s=$stack_var0;
UNDEFINE($stack_var0);
s.pop(buf);
push((NOT("end"==buf)));
UNDEFINE(buf);
UNDEFINE(s);
UNDEFINE(command);
goto($is_var_def_return_var);
#is_var_def_end:print("");
string$Type_return_var;
string$Type_res;
goto(#Type_end);
#Type:print("");
stringcommand;
print("");
pop(command);
print("");
stacks;
stringbuf;
stack$stack_var0;
$stack_var0=reg_find("(?:(^int))",command);
s=$stack_var0;
UNDEFINE($stack_var0);
s.pop(buf);
[goto(#int_end),("end"==buf),print("")];
push("int");
UNDEFINE(buf);
UNDEFINE(s);
UNDEFINE(command);
goto($Type_return_var);
#int_end:print("");
stack$stack_var0;
$stack_var0=reg_find("(?:(^float))",command);
s=$stack_var0;
UNDEFINE($stack_var0);
s.pop(buf);
[goto(#float_end),("end"==buf),print("")];
push("float");
UNDEFINE(s);
UNDEFINE(buf);
UNDEFINE(command);
goto($Type_return_var);
#float_end:print("");
stack$stack_var0;
$stack_var0=reg_find("(?:(^bool))",command);
s=$stack_var0;
UNDEFINE($stack_var0);
s.pop(buf);
[goto(#bool_end),("end"==buf),print("")];
push("bool");
UNDEFINE(buf);
UNDEFINE(s);
UNDEFINE(command);
goto($Type_return_var);
#bool_end:print("");
stack$stack_var0;
$stack_var0=reg_find("(?:(^stack))",command);
s=$stack_var0;
UNDEFINE($stack_var0);
s.pop(buf);
[goto(#stack_end),("end"==buf),print("")];
push("stack");
UNDEFINE(s);
UNDEFINE(buf);
UNDEFINE(command);
goto($Type_return_var);
#stack_end:print("");
stack$stack_var0;
$stack_var0=reg_find("(?:(^string))",command);
s=$stack_var0;
UNDEFINE($stack_var0);
s.pop(buf);
[goto(#string_end),("end"==buf),print("")];
push("string");
UNDEFINE(buf);
UNDEFINE(s);
UNDEFINE(command);
goto($Type_return_var);
#string_end:print("");
stack$stack_var0;
$stack_var0=reg_find("(?:(^void))",command);
s=$stack_var0;
UNDEFINE($stack_var0);
s.pop(buf);
[goto(#void_end),("end"==buf),print("")];
push("void");
UNDEFINE(s);
UNDEFINE(buf);
UNDEFINE(command);
goto($Type_return_var);
#void_end:print("");
string $print_arg0;
$print_arg0=command;
print($print_arg0);
UNDEFINE($print_arg0);
string $print_arg0;
$print_arg0="\n";
print($print_arg0);
UNDEFINE($print_arg0);
string $print_arg0;
$print_arg0="Type: ERROR\n";
print($print_arg0);
UNDEFINE($print_arg0);
exit(1);
#Type_end:print("");
string$switch_files_return_var;
goto(#switch_files_end);
#switch_files:print("");
print("");
$finish_return_var="#finish_res0";
goto(#finish);
#finish_res0:print("");
print("");
[print(""),(first_file),goto(#first_end)];
SET_SOURCE("benv/internal/for_program.b");
SET_DEST("benv/internal/for_program2.b");
first_file=False;
goto(#switch_files_e);
#first_end:print("");
SET_SOURCE("benv/internal/for_program2.b");
SET_DEST("benv/internal/for_program.b");
first_file=True;
#switch_files_e:print("");
print("");
goto($switch_files_return_var);
#switch_files_end:print("");
string$clear_files_return_var;
goto(#clear_files_end);
#clear_files:print("");
print("");
[goto(#first_file),(first_file),print("")];
$switch_files_return_var="#switch_files_res0";
goto(#switch_files);
#switch_files_res0:print("");
print("");
$switch_command_return_var="#switch_command_res0";
goto(#switch_command);
#switch_command_res0:print("");
print("");
#clear_files_s:print("");
[goto(#clear_files_e),("end"==command),print("")];
send_command(command);
$switch_command_return_var="#switch_command_res1";
goto(#switch_command);
#switch_command_res1:print("");
print("");
goto(#clear_files_s);
#first_file:print("");
print("");
#clear_files_e:print("");
$finish_return_var="#finish_res1";
goto(#finish);
#finish_res1:print("");
print("");
DEL_DEST("benv/internal/for_program2.b");
DEL_DEST(root_source);
goto($clear_files_return_var);
#clear_files_end:print("");
string$main_return_var;
goto(#main_end);
#main:print("");
print("");
$init_return_var="#init_res0";
goto(#init);
#init_res0:print("");
print("");
intcounter;
intinternal_counter;
intcommand_len;
intcommand_len2;
intbuf_len;
intold_num;
stringsnum;
stringbuf;
stringinc;
stringold_command;
stringinternal_old_command;
intpos;
boolwas_for;
boolwas_internal_for;
stringarg_type;
stringarg_name;
was_for=False;
was_internal_for=False;
#next:print("");
$switch_command_return_var="#switch_command_res2";
goto(#switch_command);
#switch_command_res2:print("");
print("");
[print(""),(NOT("end"==command)),goto(#_cond2_end)];
bool$is_for_res0;
push(command);
$is_for_return_var="#is_for_res0";
goto(#is_for);
#is_for_res0:pop($is_for_res);
$is_for_res0=$is_for_res;
[print(""),($is_for_res0),goto(#_cond3_end)];
UNDEFINE($is_for_res0);
was_for=True;
was_internal_for=False;
buf="if(True){print(\"\")";
send_command(buf);
int$l0;
$l0=len(command);
command_len=$l0;
UNDEFINE($l0);
int$sl_internal0;
int$sl_left0;
int$sl_right0;
$sl_left0=4;
$sl_right0=command_len;
string$sl0;
$sl0=command[$sl_left0:$sl_right0];
command=$sl0;
UNDEFINE($sl_internal0);
UNDEFINE($sl0);
UNDEFINE($sl_left0);
UNDEFINE($sl_right0);
send_command(command);
old_command=command;
$switch_command_return_var="#switch_command_res3";
goto(#switch_command);
#switch_command_res3:print("");
print("");
send_command(command);
$switch_command_return_var="#switch_command_res4";
goto(#switch_command);
#switch_command_res4:print("");
print("");
string$s0;
$s0=str(num);
snum=$s0;
UNDEFINE($s0);
buf=("bool $for"+snum);
send_command(buf);
buf=(("#_for"+snum)+":print(\"\")");
send_command(buf);
buf=(("if("+command)+"){print(\"\")");
condition=buf;
send_command(buf);
$switch_command_return_var="#switch_command_res5";
goto(#switch_command);
#switch_command_res5:print("");
print("");
int$block_end_res0;
$block_end_return_var="#block_end_res0";
goto(#block_end);
#block_end_res0:pop($block_end_res);
$block_end_res0=$block_end_res;
counter=$block_end_res0;
UNDEFINE($block_end_res0);
int$ind0;
$ind0=index(command,"{");
pos=$ind0;
UNDEFINE($ind0);
[print(""),(-1==pos),goto(#_cond4_end)];
push("for: ERROR");
$println_return_var="#println_res1";
goto(#println);
#println_res1:print("");
print("");
exit(1);
#_cond4_end:print("");
print("");
pos=(pos-1);
int$sl_internal0;
int$sl_left0;
int$sl_right0;
$sl_left0=0;
$sl_right0=pos;
string$sl0;
$sl0=command[$sl_left0:$sl_right0];
inc=$sl0;
UNDEFINE($sl_internal0);
UNDEFINE($sl0);
UNDEFINE($sl_left0);
UNDEFINE($sl_right0);
#next_internal:print("");
$switch_command_return_var="#switch_command_res6";
goto(#switch_command);
#switch_command_res6:print("");
print("");
[print(""),(COMMAND_COUNTER<counter),goto(#_cond5_end)];
bool$is_for_res1;
push(command);
$is_for_return_var="#is_for_res1";
goto(#is_for);
#is_for_res1:pop($is_for_res);
$is_for_res1=$is_for_res;
[print(""),($is_for_res1),goto(#_cond6_end)];
UNDEFINE($is_for_res1);
was_internal_for=True;
send_command(command);
$switch_command_return_var="#switch_command_res7";
goto(#switch_command);
#switch_command_res7:print("");
print("");
send_command(command);
$switch_command_return_var="#switch_command_res8";
goto(#switch_command);
#switch_command_res8:print("");
print("");
send_command(command);
$switch_command_return_var="#switch_command_res9";
goto(#switch_command);
#switch_command_res9:print("");
print("");
send_command(command);
$block_end_return_var="#block_end_res1";
goto(#block_end);
#block_end_res1:pop($block_end_res);
internal_counter=$block_end_res;
$switch_command_return_var="#switch_command_res10";
goto(#switch_command);
#switch_command_res10:print("");
print("");
int$block_end_res1;
$block_end_return_var="#block_end_res2";
goto(#block_end);
#block_end_res2:pop($block_end_res);
$block_end_res1=$block_end_res;
UNDEFINE(ernal_counter=$block_end_res1);
UNDEFINE($block_end_res1);
#_cond6_end:print("");
print("");
[print(""),(was_internal_for),goto(#_cond7_end)];
[print(""),(COMMAND_COUNTER>internal_counter),goto(#_cond8_end)];
was_internal_for=False;
#_cond8_end:print("");
print("");
#_cond7_end:print("");
print("");
[print(""),(("break"==command)AND(NOT(was_internal_for))),goto(#_cond9_end)];
command=(("$for"+snum)+"=True");
send_command(command);
command=(("goto(#_undef_for"+snum)+")");
#_cond9_end:print("");
print("");
[print(""),(("continue"==command)AND(NOT(was_internal_for))),goto(#_cond10_end)];
send_command(inc);
command=(("goto(#_undef_for"+snum)+")");
#_cond10_end:print("");
print("");
send_command(command);
goto(#next_internal);
#_cond5_end:print("");
print("");
send_command(inc);
buf=(("#_undef_for"+snum)+":print(\"\")");
send_command(buf);
send_command(command);
buf=(("if($for"+snum)+"){print(\"\")");
send_command(buf);
buf=((("goto(#_for")+snum)+"_end)");
send_command(buf);
buf="}";
send_command(buf);
send_command(condition);
buf="CLEAR()";
send_command(buf);
buf=(("goto(#_for"+snum)+")");
send_command(buf);
buf="}";
send_command(buf);
command=(("#_for"+snum)+"_end:print(\"\")");
send_command(command);
print("");
print("");
command="}";
send_command(command);
print("");
print("");
print("");
print("");
print("");
print("");
print("");
print("");
old_num=num;
num=(num+1);
goto(#_cond_exit0);
#_cond3_end:print("");
send_command(command);
print("");
#_cond_exit0:print("");
print("");
goto(#next);
#_cond2_end:print("");
print("");
[print(""),(was_for),goto(#_cond11_end)];
was_for=False;
$switch_files_return_var="#switch_files_res1";
goto(#switch_files);
#switch_files_res1:print("");
print("");
COMMAND_COUNTER=0;
goto(#next);
#_cond11_end:print("");
print("");
$clear_files_return_var="#clear_files_res0";
goto(#clear_files);
#clear_files_res0:print("");
print("");
UNDEFINE(ernal_counter=$block_end_res);
UNDEFINE(arg_name);
UNDEFINE(arg_type);
UNDEFINE(was_internal_for);
UNDEFINE(was_for);
UNDEFINE(pos);
UNDEFINE(internal_old_command);
UNDEFINE(old_command);
UNDEFINE(inc);
UNDEFINE(buf);
UNDEFINE(snum);
UNDEFINE(old_num);
UNDEFINE(buf_len);
UNDEFINE(command_len2);
UNDEFINE(command_len);
UNDEFINE(internal_counter);
UNDEFINE(counter);
goto($main_return_var);
#main_end:print("");
$main_return_var="#main_res0";
goto(#main);
#main_res0:print("");
print("");
